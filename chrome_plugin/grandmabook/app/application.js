// Generated by CoffeeScript 1.6.3
(function() {
  var $, GmailNewComposeEmailTracker, MainWatcher, annotateCompose, script;

  console.verbose = console.log;

  $ = jQuery;

  if (!window.io) {
    script = document.createElement('script');
    script.setAttribute('src', "//ws.familicircle.com/socket.io/socket.io.js");
    document.head.appendChild(script);
  }

  MainWatcher = (function() {
    function MainWatcher(emailId) {
      this.emailId = emailId;
      this.emailId = 0;
      this.views = [];
    }

    MainWatcher.prototype.attachGrandmabook = function(el, text) {
      var $el, binded_callback, callback, emailId, view, _enabled, _enabled_url, _tooltip,
        _this = this;
      $el = $(el);
      if (!$el.hasClass("grandmabook-nc-email")) {
        emailId = this.emailId;
        this.emailId += 1;
        $el.addClass("grandmabook grandmabook-nc-email grandmabook-nc-email-" + emailId);
        _enabled = false;
        _enabled_url = "";
        _tooltip = "Track Email with Grandmabook";
        callback = function(success) {
          _this.views.push(view);
          return console.log("GRANDMABOOK: Created View");
        };
        binded_callback = _.bind(callback, this);
        return view = new GmailNewComposeEmailTracker({
          emailId: emailId,
          dialogEl: $el,
          enabled: _enabled,
          enabled_url: _enabled_url,
          tooltip: _tooltip,
          callback: binded_callback
        });
      }
    };

    MainWatcher.prototype.parseDOM = function() {
      var dialog, dialogs, email, email_elem, email_pattern, err, popout, popouts, replies, reply, _error, _i, _j, _k, _len, _len1, _len2, _results;
      try {
        if (window.detected_email == null) {
          email_elem = $("span[class='gbps2']:first");
          if (email_elem[0] != null) {
            email = email_elem.first().text();
            console.verbose("GRANDMABOOK: Found email " + email);
            email_pattern = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
            if (email_pattern.test(email)) {
              window.detected_email = email;
            } else {
              window.detected_email = null;
            }
          }
        }
        popouts = $("body.xE.xp");
        dialogs = $(".nH.Hd[role='dialog']");
        replies = $("table .M9");
        for (_i = 0, _len = dialogs.length; _i < _len; _i++) {
          dialog = dialogs[_i];
          this.attachGrandmabook(dialog, "dialog");
        }
        for (_j = 0, _len1 = replies.length; _j < _len1; _j++) {
          reply = replies[_j];
          this.attachGrandmabook(reply, "reply");
        }
        _results = [];
        for (_k = 0, _len2 = popouts.length; _k < _len2; _k++) {
          popout = popouts[_k];
          _results.push(this.attachGrandmabook(popout, "popout"));
        }
        return _results;
      } catch (_error) {
        _error = _error;
        err = _error;
        return console.verbose("Mutation Error - " + err.message);
      }
    };

    MainWatcher.prototype.watchForChanges = function() {
      var config, observer, parseFunc;
      config = {
        childList: true,
        subtree: true
      };
      console.verbose("GRANDMABOOK: Starting Compose Mutation Observer");
      parseFunc = this.parseDOM;
      this.parseDOM();
      observer = new MutationObserver(_.bind(parseFunc, this));
      return observer.observe(document, config);
    };

    return MainWatcher;

  })();

  GmailNewComposeEmailTracker = (function() {
    GmailNewComposeEmailTracker.prototype.LOGO = 'http://www.familicircle.com/images/logo_24_trans.png';

    GmailNewComposeEmailTracker.prototype.HOST = 'http://www.familicircle.com';

    function GmailNewComposeEmailTracker(params) {
      this.emailId = params.emailId, this.dialogEl = params.dialogEl, this.enabled = params.enabled, this.enabled_url = params.enabled_url, this.tooltip = params.tooltip, this.callback = params.callback;
      this.dialogCls = ".grandmabook-nc-email-" + this.emailId;
      this.ui = {
        dialog: this.dialogEl
      };
      this.$el = $("<p class='grandmabook-container'/>");
      this.el = this.$el[0];
      this.setEnabled(this.enabled);
      this.watchEmailDialog();
    }

    GmailNewComposeEmailTracker.prototype.template = function(params) {
      var status;
      status = this.enabled ? "enabled" : "disabled";
      return "<img src='" + this.LOGO + "' alt='FamiliCircle'>\n<a href='http://www.familicircle.com/' class='home-link'>FamiliCircle</a>\n<span class='status'>" + status + "</span>\n<a href='#' class='enable-link'>Share pictures/video with <b>FamiliCircle</b></a>\n<div class='controls'>\n</div>";
    };

    GmailNewComposeEmailTracker.prototype.setEnabled = function(enabled) {
      var current, old;
      current = enabled ? "enabled" : "disabled";
      old = enabled ? "disabled" : "enabled";
      this.$el.find(".status").html(current);
      $(this.dialogCls).removeClass("grandmabook-" + old).addClass("grandmabook-" + current);
      return this.enabled = enabled;
    };

    GmailNewComposeEmailTracker.prototype.beforeRemove = function() {
      if (this.observer) {
        this.observer.disconnect();
      }
      $(this.ui.messageBody).off("DOMSubtreeModified", this.doBodyCheck);
      if (this.ui.sendButton) {
        return this.ui.sendButton.off();
      }
    };

    GmailNewComposeEmailTracker.prototype.render = function() {
      var tooltip,
        _this = this;
      tooltip = void 0;
      tooltip = this.tooltip;
      this.$el.html(this.template({
        tooltip: tooltip
      }));
      this.ui.checkbox = this.$el.find(".grandmabook-js-checkbox");
      this.ui.label = this.$el.find(".grandmabook-css-newcompose");
      this.$el.find(".enable-link").on('click', function(e) {
        e.preventDefault();
        _this.setEnabled(true);
        return true;
      });
      return this;
    };

    GmailNewComposeEmailTracker.prototype.watchEmailDialog = function() {
      var config, err, target, _error,
        _this = this;
      config = {
        childList: true,
        subtree: true
      };
      console.verbose("GRANDMABOOK: Initializing Compose Mutation Observer for " + this.dialogCls);
      this.observer = new MutationObserver(function(mutations) {
        var err, send, trash, trashCls, _error;
        try {
          send = $("" + _this.dialogCls + " .T-I.J-J5-Ji.aoO.T-I-atl.L3");
          if (send.length && !_this.ui.sendButton) {
            _this.ui.sendButton = send;
            _this.initializeSendButton();
          }
          trashCls = ".og.T-I-J3";
          trash = $("" + _this.dialogCls + " " + trashCls);
          if (trash.length && !_this.ui.trashcan) {
            console.verbose("GRANDMABOOK: Found Trashcan");
            _this.ui.trashcan = _this.ui.dialog.find(trashCls).parents(".J-J5-Ji[id]").last();
            if (!_this.wisestamp) {
              return _this.attachBar();
            }
          }
        } catch (_error) {
          _error = _error;
          err = _error;
          return console.verbose("GRANDMABOOK: " + err.message);
        }
      });
      try {
        target = $("" + this.dialogCls).get(0);
        return this.observer.observe(target, config);
      } catch (_error) {
        _error = _error;
        err = _error;
        return console.verbose("GRANDMABOOK: " + err.messgae);
      }
    };

    GmailNewComposeEmailTracker.prototype.initializeTextBox = function() {
      if (this.enabled) {
        this.ui.textBox.prepend("<span class='oG grandmabook-note grandmabook-tracked'>Tracked Email</span>");
        return this.ui.textBox.prepend("<span class='oG grandmabook-note grandmabook-untracked'>Untracked Email</span>");
      }
    };

    GmailNewComposeEmailTracker.prototype.initializeSendButton = function() {
      var $btn;
      $btn = this.ui.sendButton.clone();
      this.ui.sendButton.before($btn);
      this.ui.sendButton.css('display', 'none');
      return $btn.on('click', _.bind(this.clickSend, this));
    };

    GmailNewComposeEmailTracker.prototype.rewriteBody = function(callback) {
      var $editable,
        _this = this;
      $editable = $("" + this.dialogCls + " .editable");
      return $.post("" + this.HOST + "/api/id", {}, function(data) {
        var recipient, sender;
        $editable.prepend("<h3>Click here to see content!</h3> <a href='" + data.url + "'>" + data.url + "</a><br><br>");
        recipient = $("" + _this.dialogCls + " .vT").text();
        sender = $("" + _this.dialogCls + " .J-JN-M-I .J-J5-Ji .az2 .az4 .L3").text() || window.detected_email || 'unknown sender';
        callback();
        return _this.triggerWait(data.id, recipient, sender);
      });
    };

    GmailNewComposeEmailTracker.prototype.triggerWait = function(id, sender, recipient) {
      var win;
      win = window.open("" + this.HOST + "/sharing/" + id + "/" + sender + "/" + recipient, '_blank');
      return win.focus();
    };

    GmailNewComposeEmailTracker.prototype.clickSend = function(e) {
      var _this = this;
      if (!this.enabled) {
        return this.ui.sendButton.click();
      }
      return this.rewriteBody(function(id) {
        return _this.ui.sendButton.click();
      });
    };

    GmailNewComposeEmailTracker.prototype.attachBar = function() {
      console.verbose("GRANDMABOOK: Attaching Grandmabook Bar");
      return this.dialogEl.find(".aDh").before(this.render().el);
    };

    return GmailNewComposeEmailTracker;

  })();

  annotateCompose = function() {
    var mw;
    mw = new MainWatcher();
    return mw.watchForChanges();
  };

  annotateCompose();

}).call(this);
